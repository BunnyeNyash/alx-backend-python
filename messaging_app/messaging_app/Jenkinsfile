pipeline {
    agent any
    stages {
        stage('Clone Code') {
            steps {
                echo 'Cloning the code from GitHub'
                git url: 'https://github.com/yourusername/alx-backend-python.git', branch: 'main', credentialsId: 'github-credentials'
            }
        }
        stage('Install Dependencies') {
            steps {
                echo 'Installing dependencies'
                sh 'pip install -r messaging_app/requirements.txt'
            }
        }
        stage('Run Tests') {
            steps {
                echo 'Running pytest'
                sh 'python -m pytest messaging_app/tests --junitxml=messaging_app/reports/junit-report.xml'
            }
        }
        stage('Archive Test Report') {
            steps {
                echo 'Archiving test report'
                junit 'messaging_app/reports/junit-report.xml'
                archiveArtifacts 'messaging_app/reports/*'
            }
        }
        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image'
                sh 'docker build -t messaging-app:${env.BUILD_ID} messaging_app/'
            }
        }
        stage('Push to Docker Hub') {
            steps {
                echo 'Pushing Docker image to Docker Hub'
                withCredentials([usernamePassword(credentialsId: 'dockerHub', passwordVariable: 'dockerHubPass', usernameVariable: 'dockerHubUser')]) {
                    sh 'docker tag messaging-app:${env.BUILD_ID} ${dockerHubUser}/messaging-app:latest'
                    sh 'docker login -u ${dockerHubUser} -p ${dockerHubPass}'
                    sh 'docker push ${dockerHubUser}/messaging-app:latest'
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline completed'
        }
        success {
            echo 'Tests passed successfully'
        }
        failure {
            echo 'Tests failed'
        }
    }
}
